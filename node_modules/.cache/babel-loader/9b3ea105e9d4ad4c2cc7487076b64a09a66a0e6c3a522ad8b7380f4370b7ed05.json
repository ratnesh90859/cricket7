{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\cricket12-main\\\\cricket12-main\\\\src\\\\components\\\\ui\\\\text-generate-effect.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { motion, stagger, useAnimate } from \"framer-motion\";\nimport { cn } from \"../lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextGenerateEffect = _ref => {\n  _s();\n  let {\n    words,\n    className,\n    filter = true,\n    duration = 0.5\n  } = _ref;\n  const [scope, animate] = useAnimate();\n  let wordsArray = words.split(\" \");\n  useEffect(() => {\n    animate(\"span\", {\n      opacity: 1,\n      filter: filter ? \"blur(0px)\" : \"none\"\n    }, {\n      duration: duration ? duration : 1,\n      delay: stagger(0.2)\n    });\n  }, [scope.current]);\n  const renderWords = () => {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: scope,\n      children: wordsArray.map((word, idx) => {\n        return /*#__PURE__*/_jsxDEV(motion.span, {\n          className: \"dark:text-white text-white opacity-0\",\n          style: {\n            filter: filter ? \"blur(10px)\" : \"none\"\n          },\n          children: [word, \" \"]\n        }, word + idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(\"font-bold\", className),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" dark:text-white text-black text-2xl leading-snug tracking-wide\",\n        children: renderWords()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 6\n  }, this);\n};\n_s(TextGenerateEffect, \"crQrtxD822sFKyor5CO2nze/XGc=\", false, function () {\n  return [useAnimate];\n});\n_c = TextGenerateEffect;\nvar _c;\n$RefreshReg$(_c, \"TextGenerateEffect\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","motion","stagger","useAnimate","cn","jsxDEV","_jsxDEV","TextGenerateEffect","_ref","words","className","filter","duration","scope","animate","wordsArray","split","opacity","delay","current","renderWords","div","ref","children","map","word","idx","span","style","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/cricket12-main/cricket12-main/src/components/ui/text-generate-effect.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport { motion, stagger, useAnimate } from \"framer-motion\";\r\nimport { cn } from \"../lib/utils\";\r\n\r\nexport const TextGenerateEffect = ({\r\n  words,\r\n  className,\r\n  filter = true,\r\n  duration = 0.5\r\n}) => {\r\n  const [scope, animate] = useAnimate();\r\n  let wordsArray = words.split(\" \");\r\n  useEffect(() => {\r\n    animate(\"span\", {\r\n      opacity: 1,\r\n      filter: filter ? \"blur(0px)\" : \"none\",\r\n    }, {\r\n      duration: duration ? duration : 1,\r\n      delay: stagger(0.2),\r\n    });\r\n  }, [scope.current]);\r\n\r\n  const renderWords = () => {\r\n    return (\r\n      (<motion.div ref={scope}>\r\n        {wordsArray.map((word, idx) => {\r\n          return (\r\n            (<motion.span\r\n              key={word + idx}\r\n              className=\"dark:text-white text-white opacity-0\"\r\n              style={{\r\n                filter: filter ? \"blur(10px)\" : \"none\",\r\n              }}>\r\n              {word}{\" \"}\r\n            </motion.span>)\r\n          );\r\n        })}\r\n      </motion.div>)\r\n    );\r\n  };\r\n\r\n  return (\r\n    (<div className={cn(\"font-bold\", className)}>\r\n      <div className=\"mt-4\">\r\n        <div\r\n          className=\" dark:text-white text-black text-2xl leading-snug tracking-wide\">\r\n          {renderWords()}\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  );\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACb,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,QAAQ,eAAe;AAC3D,SAASC,EAAE,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,kBAAkB,GAAGC,IAAA,IAK5B;EAAAV,EAAA;EAAA,IAL6B;IACjCW,KAAK;IACLC,SAAS;IACTC,MAAM,GAAG,IAAI;IACbC,QAAQ,GAAG;EACb,CAAC,GAAAJ,IAAA;EACC,MAAM,CAACK,KAAK,EAAEC,OAAO,CAAC,GAAGX,UAAU,CAAC,CAAC;EACrC,IAAIY,UAAU,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC;EACjChB,SAAS,CAAC,MAAM;IACdc,OAAO,CAAC,MAAM,EAAE;MACdG,OAAO,EAAE,CAAC;MACVN,MAAM,EAAEA,MAAM,GAAG,WAAW,GAAG;IACjC,CAAC,EAAE;MACDC,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;MACjCM,KAAK,EAAEhB,OAAO,CAAC,GAAG;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACW,KAAK,CAACM,OAAO,CAAC,CAAC;EAEnB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,oBACGd,OAAA,CAACL,MAAM,CAACoB,GAAG;MAACC,GAAG,EAAET,KAAM;MAAAU,QAAA,EACrBR,UAAU,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;QAC7B,oBACGpB,OAAA,CAACL,MAAM,CAAC0B,IAAI;UAEXjB,SAAS,EAAC,sCAAsC;UAChDkB,KAAK,EAAE;YACLjB,MAAM,EAAEA,MAAM,GAAG,YAAY,GAAG;UAClC,CAAE;UAAAY,QAAA,GACDE,IAAI,EAAE,GAAG;QAAA,GALLA,IAAI,GAAGC,GAAG;UAAAG,QAAA,EAAAhC,YAAA;UAAAiC,UAAA;UAAAC,YAAA;QAAA,OAMJ,CAAC;MAElB,CAAC;IAAC;MAAAF,QAAA,EAAAhC,YAAA;MAAAiC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAEjB,CAAC;EAED,oBACGzB,OAAA;IAAKI,SAAS,EAAEN,EAAE,CAAC,WAAW,EAAEM,SAAS,CAAE;IAAAa,QAAA,eAC1CjB,OAAA;MAAKI,SAAS,EAAC,MAAM;MAAAa,QAAA,eACnBjB,OAAA;QACEI,SAAS,EAAC,iEAAiE;QAAAa,QAAA,EAC1EH,WAAW,CAAC;MAAC;QAAAS,QAAA,EAAAhC,YAAA;QAAAiC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAF,QAAA,EAAAhC,YAAA;MAAAiC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAF,QAAA,EAAAhC,YAAA;IAAAiC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/CWS,kBAAkB;EAAA,QAMJJ,UAAU;AAAA;AAAA6B,EAAA,GANxBzB,kBAAkB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}